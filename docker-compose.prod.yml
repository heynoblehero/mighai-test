version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
      args:
        - REPO_URL=https://github.com/heynoblehero/mighai-test.git
        - BRANCH=main
    container_name: saas-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DOMAIN=${DOMAIN}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - DATABASE_URL=${DATABASE_URL:-sqlite:./data/production.db}
      - SESSION_SECRET=${SESSION_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    volumes:
      - ./data:/app/data:rw
      - ./uploads:/app/uploads:rw
      - ./logs:/app/logs:rw
    networks:
      - saas-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: saas-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx:rw
    networks:
      - saas-network
    depends_on:
      - app
    command: ["/bin/sh", "-c", "while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g 'daemon off;'"]

  redis:
    image: redis:alpine
    container_name: saas-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - saas-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  certbot:
    image: certbot/certbot
    container_name: saas-certbot
    volumes:
      - ./ssl:/etc/letsencrypt:rw
      - ./logs/certbot:/var/log/letsencrypt:rw
    command: certonly --webroot -w /var/www/certbot -d ${DOMAIN} --email ${ADMIN_EMAIL} --agree-tos --no-eff-email --keep-until-expiring
    depends_on:
      - nginx

  watchtower:
    image: containrrr/watchtower
    container_name: saas-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=86400  # Check daily
      - WATCHTOWER_INCLUDE_STOPPED=true
    command: --interval 86400 saas-app

volumes:
  redis_data:
    driver: local

networks:
  saas-network:
    driver: bridge